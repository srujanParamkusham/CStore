@using CStore.Domain.Domains.Admin.Models.ViewModels.AppAnnouncementMaintenance
@model CStore.Domain.Domains.Admin.Models.ViewModels.AppAnnouncementMaintenance.AppAnnouncementMaintenanceListViewModel
@{
    ViewBag.Title = "Announcement Maintenance";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <h5>@ViewBag.Title</h5>
            <div class="ibox-tools">
                <a class="collapse-link">
                    <i class="fa fa-chevron-up"></i>
                </a>
            </div>
        </div>
        <div class="ibox-content">
            @Catalyst.Partial("_ValidationSummaryErrors")

            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "searchParamsForm", @class = "form-horizontal" }))
            {
                <div class="row search-criteria-div">
                    <div class="form-group col-sm-3" style="margin-right: 1em;">
                        @Catalyst.LabelFor(p => p.Subject, new {@class = "control-label"})<br/>
                        @Catalyst.EditorFor(p => p.Subject, new {@class = "form-control"})
                        @Catalyst.ValidationMessageFor(p => p.Subject)
                    </div>

                    <div class="form-group col-sm-3" style="margin-right: 1em;">
                        @Catalyst.LabelFor(p => p.AnnouncementText, new {@class = "control-label"})<br/>
                        @Catalyst.EditorFor(p => p.AnnouncementText, new {@class = "form-control"})
                        @Catalyst.ValidationMessageFor(p => p.AnnouncementText)
                    </div>

                    <div class="form-group col-sm-6" style="margin-right: 1em;">
                        @Catalyst.LabelFor(p => p.EffectiveDateStart, new {@class = "control-label"})<br/>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="input-group date datepicker">
                                    @Catalyst.TextBoxFor(p => p.EffectiveDateStart, new {@class = "form-control ", @placeholder = "Start Date"})
                                    <span class="input-group-addon">
                                        <span class="fa fa-calendar"></span>
                                    </span>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="input-group date datepicker">
                                    @Catalyst.TextBoxFor(p => p.EffectiveDateEnd, new {@class = "form-control", @placeholder = "End Date"})
                                    <span class="input-group-addon">
                                        <span class="fa fa-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                        @Catalyst.ValidationMessageFor(p => p.EffectiveDateStart)
                    </div>
                    <div class="col-sm-3 pull-right text-right" style="padding-top: 2em;">
                        @Catalyst.Button("Search", new { type = "submit", @class = "btn btn-primary m-b btn-fixed-width-sm", id = "SearchButton" })
                        @Catalyst.Button("Clear", new { type = "reset", @class = "btn m-b btn-fixed-width-sm", id = "ClearButton" })
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<div class="row">
    <div class="ibox float-e-margins">
        <div class="ibox-content">
            @Catalyst.Grid(new DomainGridConfiguration()
                                {
                                   ID = "mainDataTable",
                                   AjaxUrl = Url.Action(MVC.Admin.AppAnnouncementMaintenance.List()),
                                   KeyColumnName = "AppAnnouncementId",
                                   ParametersFormId = "searchParamsForm",
                                   DefaultModalDetails = true,
                                   EditAction = Url.Action(MVC.Admin.AppAnnouncementMaintenance.Edit()),
                                   DeleteAction = Url.Action(MVC.Admin.AppAnnouncementMaintenance.Delete())
                                }
                                .AddColumn("", "", ColumnTypes.Select)
                                .AddColumn("AppAnnouncementId", "ID", ColumnTypes.Link,
                                    new
                                    {
                                        RenderUrlToOpen = Url.Action(MVC.Admin.AppAnnouncementMaintenance.Edit()),
                                        RenderUrlToOpenParameter = "AppAnnouncementId"
                                    }
                                )
                                .AddColumn("Subject", "Subject", ColumnTypes.ReadOnly,
                                new
                                {
                                    DefaultSortPosition = 4,
                                    DefaultSortDirection = SortDirection.Ascending
                                })
                                .AddColumn("EffectiveDate", "Effective", ColumnTypes.ReadOnly,
                                new
                                {
                                    DataFormat = ColumnFormats.DateTime,
                                    DefaultSortPosition = 2,
                                    DefaultSortDirection = SortDirection.Ascending
                                })
                                .AddColumn("ExpirationDate", "Expiration", ColumnTypes.ReadOnly,
                                new
                                {
                                    DataFormat = ColumnFormats.DateTime,
                                    DefaultSortPosition = 3,
                                    DefaultSortDirection = SortDirection.Ascending
                                })
                                .AddColumn("ForceToTopOfList", "Sticky", ColumnTypes.ReadOnly,
                                new
                                {
                                    DataFormat = ColumnFormats.YesNo,
                                    DefaultSortPosition = 1,
                                    DefaultSortDirection = SortDirection.Ascending
                                })
                                .AddButton(StandardButtons.New)
                                .AddButton(StandardButtons.Edit)
                                .AddButton(StandardButtons.Delete)
                                .AddButton(StandardButtons.SelectAll)
                                .AddButton(StandardButtons.DeselectAll)
                            )
        </div>
    </div>
</div>
